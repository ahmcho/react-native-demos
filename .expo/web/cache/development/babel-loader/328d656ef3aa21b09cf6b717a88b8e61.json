{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ahmad/Documents/Projects/React Native/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case 'change_green':\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    case 'change_blue':\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["/home/ahmad/Documents/Projects/React Native/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport {View, Text, Button, StyleSheet} from 'react-native';\nimport ColorCounter from '../components/ColorCounter';\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'change_red':\n            return state.red + action.payload > 255 || state.red + action.payload < 0 \n            ? state\n            : {...state, red: state.red + action.payload};\n        case 'change_green':\n            return state.green + action.payload > 255 || state.green + action.payload < 0 \n            ? state\n            : {...state, green: state.green + action.payload};\n        case 'change_blue':\n            return state.blue + action.payload > 255 || state.blue + action.payload < 0 \n            ? state\n            : {...state, blue: state.blue + action.payload};\n        default:\n            return state;\n    }\n};\n\nconst SquareScreen = () => {\n\n    const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n    const {red,green,blue} = state;\n    return (\n        <View>\n            <ColorCounter \n                onIncrease={()=> dispatch({type:'change_red',payload: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({type:'change_red',payload: -1 * COLOR_INCREMENT})} \n                color=\"Red\" \n            />\n            <ColorCounter \n                onIncrease={()=> dispatch({type:'change_green',payload: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({type:'change_green',payload: -1 * COLOR_INCREMENT})} \n                color=\"Green\"\n            />\n            <ColorCounter \n                onIncrease={()=> dispatch({type:'change_blue',payload: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({type:'change_blue',payload: -1 * COLOR_INCREMENT})} \n                color=\"Blue\"\n            />\n            <View style={{\n                height: 150,\n                width: 150,\n                backgroundColor: `rgb(${red},${green},${blue})`\n            }} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({})\n\nexport default SquareScreen;"]},"metadata":{},"sourceType":"module"}