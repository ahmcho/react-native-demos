{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/ahmad/Documents/Projects/React Native/rn-starter/src/screens/CounterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar COUNT_INCREMENT = 1;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload\n      });\n\n    case 'DECREMENT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar CounterScreen = function CounterScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var count = state.count;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Increase\",\n    onPress: function onPress() {\n      return dispatch({\n        type: 'INCREMENT',\n        payload: COUNT_INCREMENT\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Decrease\",\n    onPress: function onPress() {\n      return dispatch({\n        type: 'DECREMENT',\n        payload: COUNT_INCREMENT\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Current Count: \", count));\n};\n\nvar styles = StyleSheet.create({});\nexport default CounterScreen;","map":{"version":3,"sources":["/home/ahmad/Documents/Projects/React Native/rn-starter/src/screens/CounterScreen.js"],"names":["React","useReducer","COUNT_INCREMENT","reducer","state","action","type","count","payload","CounterScreen","dispatch","styles","StyleSheet","create"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAGA,IAAMC,eAAe,GAAG,CAAxB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,6CAAWF,KAAX;AAAkBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA9C;;AACJ,SAAK,WAAL;AACI,6CAAWJ,KAAX;AAAkBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA9C;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CATD;;AAWA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,oBAEER,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CAFZ;AAAA;AAAA,MAEjBH,KAFiB;AAAA,MAEVM,QAFU;;AAAA,MAGjBH,KAHiB,GAGRH,KAHQ,CAGjBG,KAHiB;AAIxB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAG;AAAA,aAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBE,QAAAA,OAAO,EAAEN;AAA7B,OAAD,CAAd;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAG;AAAA,aAAMQ,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBE,QAAAA,OAAO,EAAEN;AAA7B,OAAD,CAAd;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBK,KAAtB,CAHJ,CADJ;AAOH,CAXD;;AAaA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAeJ,aAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { View, Text, StyleSheet, Button} from 'react-native';\n\nconst COUNT_INCREMENT = 1;\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return {...state, count: state.count + action.payload};\n        case 'DECREMENT':\n            return {...state, count: state.count - action.payload};\n        default:\n            return state;\n    }\n}\n\nconst CounterScreen = () => {\n    \n    const [state, dispatch] = useReducer(reducer, { count: 0 });\n    const {count} = state;\n    return (\n        <View>\n            <Button title=\"Increase\" onPress={ () => dispatch({type: 'INCREMENT', payload: COUNT_INCREMENT})}/>\n            <Button title=\"Decrease\" onPress={ () => dispatch({type: 'DECREMENT', payload: COUNT_INCREMENT})}/>\n            <Text>Current Count: {count}</Text>\n        </View>\n    )\n};\n\nconst styles = StyleSheet.create({\n\n})\n\nexport default CounterScreen;"]},"metadata":{},"sourceType":"module"}